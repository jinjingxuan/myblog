(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{669:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"babel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[a._v("#")]),a._v(" babel")]),a._v(" "),s("p",[a._v("本文部分转载于"),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/393122285",target:"_blank",rel:"noopener noreferrer"}},[a._v("Babel教程"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("The compiler for writing next generation JavaScript")]),a._v(" "),s("p",[a._v("简单翻译下就是“用于编写下一代JavaScript的编译器”。Babel是一个工具集，主要用于将ES6版本的JavaScript代码转为ES5等向后兼容的JS代码，从而可以运行在低版本浏览器或其它环境中。")]),a._v(" "),s("h2",{attrs:{id:"安装与使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装与使用"}},[a._v("#")]),a._v(" 安装与使用")]),a._v(" "),s("p",[a._v("Babel依赖Node.js，没有安装的话，去官网下载安装最新稳定版本的Node.js。")]),a._v(" "),s("p",[a._v("在本地新建一个文件夹，在该文件夹下新建一个js文件，文件命名为babel.config.js。该文件是 Babel配置文件 ，我们在该文件里输入如下内容：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("presets")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("然后在该文件夹下新建一个js文件main.js，该js里的代码是我们需要转译的，我们写入代码")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("然后执行下面的命令安装三个npm包，这些npm包是Babel官方包")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --save-dev @babel/cli @babel/core @babel/preset-env\n")])])]),s("p",[a._v("安装完成后，执行下面的命令进行转码，该命令含义是把 main.js 转码生成 compiled.js 文件")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("npx babel main.js "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" compiled.js\n")])])]),s("p",[a._v("此时文件夹下会生成compiled.js，该文件是转换后的代码：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"use strict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("这就是一个最简单的Babel使用过程，我们把用ES6编写main.js转换成了ES5的compiled.js。")]),a._v(" "),s("ul",[s("li",[a._v("@babel/cli是Babel命令行转码工具，如果我们使用命令行进行Babel转码就需要安装它。")]),a._v(" "),s("li",[a._v("@babel/cli依赖@babel/core，因此也需要安装@babel/core这个Babel核心npm包。")]),a._v(" "),s("li",[a._v("@babel/preset-env这个npm包提供了ES6转换ES5的语法转换规则，我们在Babel配置文件里指定使用它。如果不使用的话，也可以完成转码，但转码后的代码仍然是ES6的，相当于没有转码。")])]),a._v(" "),s("h2",{attrs:{id:"babel-preset-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-preset-env"}},[a._v("#")]),a._v(" @babel/preset-env")]),a._v(" "),s("p",[a._v("Babel插件的数量非常多，处理ES2015的有")]),a._v(" "),s("ul",[s("li",[a._v("@babel/plugin-transform-arrow-functions")]),a._v(" "),s("li",[a._v("@babel/plugin-transform-block-scoped-functions")]),a._v(" "),s("li",[a._v("@babel/plugin-transform-block-scoping ......")])]),a._v(" "),s("p",[a._v("Babel插件实在太多，假如只配置插件数组，那我们前端工程要把ES2015,ES2016,ES2017...下的所有插件都写到配置项里，我们的Babel配置文件会非常臃肿。")]),a._v(" "),s("p",[a._v("preset预设就是帮我们解决这个问题的。预设是一组Babel插件的集合：")]),a._v(" "),s("ul",[s("li",[a._v("@babel/preset-env")]),a._v(" "),s("li",[a._v("@babel/preset-react")]),a._v(" "),s("li",[a._v("@babel/preset-typescript")]),a._v(" "),s("li",[a._v("babel-preset-es2015")])]),a._v(" "),s("p",[a._v("2017年Babel 的官网上在9月宣布 ES2015 / ES2016/ ES2017 等等 ES20xx 时代的 presets 通通被废弃（deprecated），取而代之的是 "),s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/babel/babel-preset-env",target:"_blank",rel:"noopener noreferrer"}},[a._v("babel-preset-env"),s("OutboundLink")],1),a._v("，并且承诺它将成为“未来不会过时的（future-proof）”解决方案。在Babel7之后，babel-preset-env 的名字是 @babel/preset-env。")]),a._v(" "),s("p",[a._v("也就是说： "),s("strong",[a._v("babel preset 将基于你的实际浏览器及运行环境，自动的确定babel插件及polyfills，转译ES2015及此版本以上的语言。")])]),a._v(" "),s("p",[a._v("在没有配置项的情况下，@babel/preset-env 表现的同 babel-preset-latest 一样(或者可以说同 babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 结合到一起，表现的一致。所以那么多的 preset 预设，现在只需一个 @babel/preset-env 就可以了。")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/preset-env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/393731413",target:"_blank",rel:"noopener noreferrer"}},[a._v("Babel教程7：Babel配置文件"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/394782898",target:"_blank",rel:"noopener noreferrer"}},[a._v("Babel教程10：@babel/preset-env"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"babel-polyfill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill"}},[a._v("#")]),a._v(" @babel/polyfill")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" promise "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ok'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("执行命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("npx babel main.js "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" compiled.js\n")])])]),s("p",[a._v("生成 compiled.js 如下：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"use strict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("fn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" promise "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ok'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("我们发现Babel并没有对ES6的Promise进行转换 ，在比较老的浏览器（ 例如火狐27 ）里打开引入后控制台会报错：Promise is not defined。")]),a._v(" "),s("blockquote",[s("p",[a._v("为何 Babel没有对ES6的Promise进行转换 ？")]),a._v(" "),s("p",[a._v("因为Babel默认只转换新的JavaScript语法（syntax），而不转换新的 API。")]),a._v(" "),s("p",[a._v("新的API分类两类，一类是Promise、Map、Symbol、Proxy、Iterator等全局对象及其对象自身的方法，例如Object.assign，Promise.resolve；另一类是新的实例方法，例如数组实例方法[1, 4, -5, 10].find((item) => item < 0)")])]),a._v(" "),s("p",[a._v("缺点：babel-polyfill比较简单粗暴，在引入的同时，也污染了全局对象，导致无效增加了很多用不到的polyfill，也可能会污染子模块的变量引用，可能导致不必要的冲突。我们目前一般会使用 @babel/runtime 和 @babel/plugin-transform-runtime")]),a._v(" "),s("h2",{attrs:{id:"babel-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-runtime"}},[a._v("#")]),a._v(" @babel/runtime")]),a._v(" "),s("p",[a._v("babel-runtime 和 babel-polyfill有点类似，都是去兼容新API的“垫片”，它和 babel-polyfill 最大的不同就是可以做到按需引用，哪里需要什么就用什么，比如我需要Promise。一般在生成环境，首先安装依赖，然后引入：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// npm install --save babel-runtime")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" Promise "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'babel-runtime/core-js/promise'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"babel-plugin-transform-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-runtime"}},[a._v("#")]),a._v(" @babel/plugin-transform-runtime")]),a._v(" "),s("p",[a._v("如果用 @babel/runtime，如果我10个文件要引用Promise，难道每个文件都得写个 @babel/runtime的Promise引入么，显然很麻烦。那么 @babel/plugin-transform-runtime就是用来解决这个问题的，无论你多少个文件引入了相关新的API，它只会存在一份，@babel/plugin-transform-runtime 本质上依赖于 babel-runtime 的 core-js，在编译的时候会帮你自动处理，在开发环境安装依赖：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --save-dev @babel/plugin-transform-runtime\n")])])]),s("p",[a._v("你只需要配置：")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/plugin-transform-runtime"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("综上，我们最常用的预设是 @babel/preset-env，最常用的插件是 @babel/plugin-transform-runtime")])]),a._v(" "),s("h2",{attrs:{id:"babel-register"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-register"}},[a._v("#")]),a._v(" @babel/register")]),a._v(" "),s("p",[s("code",[a._v("babel-register")]),a._v("模块改写"),s("code",[a._v("require")]),a._v("命令，为它加上一个钩子。此后，每当使用"),s("code",[a._v("require")]),a._v("加载"),s("code",[a._v(".js")]),a._v("、"),s("code",[a._v(".jsx")]),a._v("、"),s("code",[a._v(".es")]),a._v("和"),s("code",[a._v(".es6")]),a._v("后缀名的文件，就会先用Babel进行转码。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --save-dev @babel/register\n")])])]),s("p",[a._v("使用时，必须首先加载"),s("code",[a._v("babel-register")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"babel-register"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./index.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("然后，就不需要手动对"),s("code",[a._v("index.js")]),a._v("转码了。")]),a._v(" "),s("p",[a._v("需要注意的是，"),s("code",[a._v("babel-register")]),a._v("只会对"),s("code",[a._v("require")]),a._v("命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。")]),a._v(" "),s("p",[s("strong",[a._v("默认忽略 node_modules")])]),a._v(" "),s("p",[s("strong",[a._v("注意：")]),a._v(" 默认情况下，所有对 "),s("code",[a._v("node_modules")]),a._v(" 目录下的文件的 require 请求都将被忽略。你可以通过以下方式传递一个用于匹配被忽略文件的正则表达式来修改默认行为：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@babel/register"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// When a file path matches this regex then it is not compiled")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("ignore")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// It will not be compiled if `true` is returned.")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("filepath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" filepath "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/path/to/es6-file.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);
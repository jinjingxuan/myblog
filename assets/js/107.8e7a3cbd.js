(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{598:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"面试题-二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题-二"}},[t._v("#")]),t._v(" 面试题（二）")]),t._v(" "),s("ul",[s("li",[t._v("使用正则判断邮箱是否合法")]),t._v(" "),s("li",[t._v("Cooike,sessionStorge,localStorge的区别")]),t._v(" "),s("li",[t._v("http 和 https")]),t._v(" "),s("li",[t._v("怎么解决跨域问题")]),t._v(" "),s("li",[t._v("输入域名到展示页面发生了什么")]),t._v(" "),s("li",[t._v("常见的状态码")]),t._v(" "),s("li",[t._v("get与post的区别")]),t._v(" "),s("li",[t._v("垃圾回收机制（GC算法）")]),t._v(" "),s("li",[t._v("JS隐式转换与显示转换")]),t._v(" "),s("li",[t._v("对象的键支持什么类型")])]),t._v(" "),s("h2",{attrs:{id:"使用正则判断邮箱是否合法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用正则判断邮箱是否合法"}},[t._v("#")]),t._v(" 使用正则判断邮箱是否合法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符+@+字符+.+字母")]),t._v("\npattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true or false")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("正则基本知识")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.横向模糊匹配,一个正则可匹配的字符串的长度不是固定的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//比如/ab{2,5}c/表示匹配这样一个字符串：第一个字符是“a”，接下来是2到5个字符“b”，最后是字符“c”")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab{2,5}c")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["abbc", "abbbc", "abbbbc", "abbbbbc"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.纵向模糊匹配，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//比如/a[123]b/可以匹配如下三种字符串："a1b"、"a2b"、"a3b"。测试如下：')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("a[123]b")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a0b a1b a2b a3b a4b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["a1b", "a2b", "a3b"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.范围表示法，比如[123456abcdefGHIJKLM]，可以写成[1-6a-fG-M]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要匹配“a”、“-”、“z”这三者中任意一个字符，不能写成[a-z]，可以写成如下的方式：[-az]或[az-]或[a\\-z]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.排除字符组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[^abc]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.常见简写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\\d就是[0-9]。表示是一位数字。记忆方式：其英文是digit（数字）。\n\\D就是[^0-9]。表示除数字外的任意字符。\n\\w就是[0-9a-zA-Z_]。表示数字、大小写字母和下划线。记忆方式：w是word的简写，也称单词字符。\n\\W是[^0-9a-zA-Z_]。非单词字符。\n\\s是[ \\t\\v\\n\\r\\f]。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。记忆方式：s是space character的首字母。\n\\S是[^ \\t\\v\\n\\r\\f]。 非空白符。\n.通配符，表示几乎任意字符。\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6.多选分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("good|nice")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good idea, nice try."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["good", "nice"]')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7. ^代表开头，$代表结尾")]),t._v("\n")])])]),s("h2",{attrs:{id:"cooike-sessionstorge-localstorge的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cooike-sessionstorge-localstorge的区别"}},[t._v("#")]),t._v(" Cooike,sessionStorge,localStorge的区别")]),t._v(" "),s("blockquote",[s("p",[t._v("Cooike始终在同源的HTTP请求中携带，会在浏览器和服务器之间传递。\nsessionStorge和localStorge不会发送给服务器，仅在本地保存\nCooike不能超过4k，session和local一般小于5M\nlocalStorge存储的是持久数据，浏览器关闭不丢失。SessionStorge在关闭窗口后会自动删除。")])]),t._v(" "),s("h2",{attrs:{id:"http-和-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https"}},[t._v("#")]),t._v(" http 和 https")]),t._v(" "),s("blockquote",[s("p",[t._v("https并非应用层的一种新协议，只是http通信接口部分用ssl/tls协议代替而已。\nSSL和TLS都是加密协议\n通常http直接和tcp通信，当使用ssl时则演变成先和ssl通信，再由ssl和tcp通信。\n所谓https，其实就是身披ssl协议这层外壳的http。（回忆一下osi7层,TCP/IP4层，我们学的是5层）")]),t._v(" "),s("p",[t._v("SSL协议采用的是非对称加密算法，客户端先向服务器端索要公钥，然后用公钥加密信息，服务器收到密文后，用自己的私钥解密.")]),t._v(" "),s("p",[t._v("RSA算法：两个大素数p,q，n=pq,f(n)=(p-1)(q-1),1<b<f(n),a=b^-1modf(n),公钥n,b,私钥p,q,a")]),t._v(" "),s("p",[t._v("证书，顾名思义，就是证明的文件。例如浏览器和 tlanyan.me 服务器通信，浏览器怎么知道对方就是 tlanyan.me 对应的服务器呢？在不可信的网络下通信，中立的第三方作用就显现出来了。权威的第三方中立机构（ Certificate Authority, CA）收到 tlanyan.me 持有者的证书请求并核验信息后，将持有者的名称、公钥与 CA 用私钥生成的数字签名等信息写成证书颁发给申请者。")])]),t._v(" "),s("h2",{attrs:{id:"怎么解决跨域问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决跨域问题"}},[t._v("#")]),t._v(" 怎么解决跨域问题")]),t._v(" "),s("p",[s("strong",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://www.a.com/a.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.a.com/a.js"),s("OutboundLink")],1)]),t._v("  访问以下URL的结果")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("URL")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("是否允许通信")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://www.a.com/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.a.com/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("同一域名下")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://www.a.com/script/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.a.com/script/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("同一域名下不同文件")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://www.a.com:8000/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.a.com:8000/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("同一域名，不同端口")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=https://www.a.com/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.a.com/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("同一域名，不同协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://70.32.92.74/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://70.32.92.74/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("域名和域名对应IP")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://script.a.com/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://script.a.com/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("主域相同子域不同")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://a.com/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://a.com/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("同一域名，不同二级域名")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://link.jianshu.com?t=http://www.b.com/b.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.b.com/b.js"),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不同域名")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("不允许")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("1、 通过jsonp跨域: 直接请求文件不行，请求JS可以，我们就把数据以JSON格式装进JS文件里，其实jsonp是前后端共同约定的一种结果。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jsonp原理(只支持get请求)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建一个动态script节点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 声明接收数据的回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ev")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ev接收的就是服务端回复的数据")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 为节点设置src属性, src属性为get请求, 后面拼接一个回调函数")]),t._v("\njsonp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.ceshi.com/api/jsonp?callback=res'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 将节点插入页面")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'head'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhead"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 获取完数据删除节点")]),t._v("\nhead"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsonp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("接收到的服务端返回内容为:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JSONP请求测试成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("可以看的返回的内容, 是我们之前传入的参数res, res被作为一个函数调用了, 而传递的数据作为该回调函数的实参传递了进来, 在script标签执行的时候, 就相当于执行了res()这个函数, 括号内部的数据也就变成了参数, 可以直接被函数接收处理, 如此便实现了跨域获取数据。")]),t._v(" "),s("blockquote",[s("p",[t._v("2、 document.domain + iframe跨域:\nnews.baidu.com和map.baidu.com的一级域名相同，故可以设置document.domain = “baidu.com”;就可以跨域")]),t._v(" "),s("p",[t._v("3、 location.hash + iframe")]),t._v(" "),s("p",[t._v("4、 window.name + iframe跨域")]),t._v(" "),s("p",[t._v("5、 postMessage跨域")]),t._v(" "),s("p",[t._v("6、 跨域资源共享（CORS） Access-Control-Allow-Origin: *")]),t._v(" "),s("p",[t._v("主要通过后端来配置，CORS规范将请求分为两种类型，一种是简单请求，一种是带预检的非简单请求。\n如果是简单请求，就先执行服务端程序，然后浏览器才会判断是否跨域；GET HEAD,POST\n而对于非简单请求，浏览器会在发送实际请求之前先发送一个OPTIONS的HTTP请求来判断服务器是否能接受该跨域 请求；如果不能接受的话，浏览器会直接阻止接下来实际请求的发生。 服务端可以设置携带cooike")]),t._v(" "),s("p",[t._v("7、 nginx代理跨域")]),t._v(" "),s("p",[t._v("正向代理：我们将请求发送给代理服务器，代理服务器去访问，然后将访问到的数据传递给我们。隐藏了客户端")]),t._v(" "),s("p",[t._v("反向代理：在服务器端，有很多服务器处理请求，nginx扮演的就是一个反向代理角色，隐藏了服务器。\n启动nginx服务器把server_name设置成前端的域名，此时前端发起的请求相当于是localhost对localhost发 起，这样是不会引起跨域的。")]),t._v(" "),s("p",[t._v("8、 nodejs中间件代理跨域 与nginx代理跨域类似")]),t._v(" "),s("p",[t._v("9、 WebSocket协议跨域\nWebSocket protocol是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，同时允许跨域通讯")]),t._v(" "),s("p",[t._v("10、webpack的proxy，webpack的dev-server模块会启动一个服务器，这个服务器不止帮我们做了自动更新，同时也可以做到"),s("strong",[t._v("反向")]),t._v("代理。就是我们把请求发送给webpack-dev-server, 然后webpack-dev-server再去请求后端服务器，服务之间的请求是没有跨域问题的")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://my.oschina.net/u/2401092/blog/4412558",target:"_blank",rel:"noopener noreferrer"}},[t._v("正向代理&反向代理"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"输入域名到展示页面发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入域名到展示页面发生了什么"}},[t._v("#")]),t._v(" 输入域名到展示页面发生了什么")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6869279683230629896",target:"_blank",rel:"noopener noreferrer"}},[t._v("(超详细）从输入url到页面展示发生了什么？"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("DNS（Domain Name System，域名系统），简单的说：就是把我们输入的网站域名翻译成IP地址的系统.")]),t._v(" "),s("p",[t._v("1.在浏览器中输入url")]),t._v(" "),s("p",[t._v("2.客户端先检查本地是否有对应的IP地址，若找到则返回响应的IP地址。若没找到则请求上级DNS服务器，直至找到")]),t._v(" "),s("p",[t._v("3.有了服务器的IP， 浏览器就要可以发起HTTP请求了,联系之前的HTTP和HTTPS")]),t._v(" "),s("p",[t._v("4.Http会基于TCP建立起一个到服务器的连接通道，TCP是面向连接可靠的服务，联系三次握手四次握手\nUdp是无连接的，想发就发，不会对数据进行封装。适用于实时应用，就比如视频面试。TCP可靠，用于文件传输。")]),t._v(" "),s("p",[t._v("5.传输层下面是网络层，作用是把TCP分割好的各种数据包传送给接收方，这里需要用到mac地址，一个网络设备的IP地 址可以更换，但是MAC地址一般是固定不变的.ARP协议可以将IP地址解析成对应的MAC地址。")]),t._v(" "),s("p",[t._v("6.在找到对方的MAC地址后，就将数据发送到数据链路层传输。这时，客户端发送请求的阶段结束")]),t._v(" "),s("p",[t._v("7.接收端的服务器在链路层接收到数据包，再层层向上直到应用层。这过程中包括在运输层通过TCP协议讲分段的数据包重新组成原来的HTTP请求报文,返回响应报文，联系返回码。")]),t._v(" "),s("p",[t._v("8.请求成功之后，服务器会返回响应的HTML文件，接下来就到页面渲染了，联系到渲染引擎。")]),t._v(" "),s("p",[t._v("9.构建dom树->计算DOM树每个结点的样式->页面布局->生成分层树->栅格化（转化为位图，GPU可以处理）->显示")])]),t._v(" "),s("h2",{attrs:{id:"常见的状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的状态码"}},[t._v("#")]),t._v(" 常见的状态码")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/interview/interview.html#浏览器相关"}},[t._v("状态码")])],1),t._v(" "),s("h2",{attrs:{id:"get与post的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get与post的区别"}},[t._v("#")]),t._v(" get与post的区别")]),t._v(" "),s("blockquote",[s("p",[t._v("GET请求，请求的数据会附加在URL之后，以?分割URL和传输数据，多个参数用&连接，传输数据会受URL长度限制\nPOST请求：POST请求会把请求的数据放置在HTTP请求包的包体中，数据不受限制，数据不暴露会更安全")])]),t._v(" "),s("ul",[s("li",[t._v("GET 方法参数写法是固定的吗？")])]),t._v(" "),s("p",[t._v("在约定中，我们的参数是写在 "),s("code",[t._v("?")]),t._v(" 后面，用 "),s("code",[t._v("&")]),t._v(" 分割。")]),t._v(" "),s("p",[t._v("我们知道，解析报文的过程是通过获取 TCP 数据，用正则等工具从数据中获取 Header 和 Body，从而提取参数。")]),t._v(" "),s("p",[t._v("也就是说，我们可以自己约定参数的写法，只要服务端能够解释出来就行。")]),t._v(" "),s("ul",[s("li",[t._v("POST 方法比 GET 方法安全？")])]),t._v(" "),s("p",[t._v("按照网上大部分文章的解释，POST 比 GET 安全，因为数据在地址栏上不可见。")]),t._v(" "),s("p",[t._v("然而，从传输的角度来说，他们都是不安全的，因为 HTTP 在网络上是明文传输的，只要在网络节点上捉包，就能完整地获取数据报文。")]),t._v(" "),s("p",[s("strong",[t._v("要想安全传输，就只有加密，也就是 HTTPS。")])]),t._v(" "),s("ul",[s("li",[t._v("GET 方法的长度限制是怎么回事？")])]),t._v(" "),s("p",[t._v("在网上看到很多关于两者区别的文章都有这一条，提到浏览器地址栏输入的参数是有限的。")]),t._v(" "),s("p",[t._v("首先说明一点，HTTP 协议没有 Body 和 URL 的长度限制，对 URL 限制的大多是浏览器和服务器的原因。")]),t._v(" "),s("p",[t._v("浏览器原因就不说了，服务器是因为处理长 URL 要消耗比较多的资源，为了性能和安全（防止恶意构造长 URL 来攻击）考虑，会给 URL 长度加限制。")]),t._v(" "),s("ul",[s("li",[t._v("POST 方法会产生两个 TCP 数据包？")])]),t._v(" "),s("p",[t._v("有些文章中提到，post 会将 header 和 body 分开发送，先发送 header，服务端返回 100 状态码再发送 body。")]),t._v(" "),s("p",[t._v("HTTP 协议中没有明确说明 POST 会产生两个 TCP 数据包，而且实际测试(Chrome)发现，header 和 body 不会分开发送。所以，header 和 body 分开发送是部分浏览器或框架的请求方法，不属于 post 必然行为")]),t._v(" "),s("h2",{attrs:{id:"垃圾回收机制-gc算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制-gc算法"}},[t._v("#")]),t._v(" 垃圾回收机制（GC算法）")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jinjingxuan.com/2020/08/26/%E6%B5%8F%E8%A7%88%E5%99%A8-GC%E7%AE%97%E6%B3%95%EF%BC%8CV8%E5%BC%95%E6%93%8E/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GC算法，V8引擎"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"js隐式转换与显示转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js隐式转换与显示转换"}},[t._v("#")]),t._v(" JS隐式转换与显示转换")]),t._v(" "),s("h3",{attrs:{id:"隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),s("blockquote",[s("p",[t._v("1.undefined与null相等，但不恒等（===）\n2.一个是number一个是string时，会尝试将string转换为number\n3.隐式转换将boolean转换为number，0或1\n4.隐式转换将Object转换成number或string，取决于另外一个对比量的类型\n5.对于0、空字符串的判断，建议使用 “===” 。\n6.“==”会对不同类型值进行类型转换再判断，“===”则不会。它会先判断两边的值类型，类型不匹配时直接为false。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false  NaN不等于任何值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true           !会将其转为布尔值，![]的值为false，==操作符将false转为0，[]==0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3               []也会转为数字0   0==0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false           {} == false  ->  {} == 0  ->   NaN == 0    ->  false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1234abcd"')]),t._v("\n")])])]),s("h3",{attrs:{id:"显式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式转换"}},[t._v("#")]),t._v(" 显式转换")]),t._v(" "),s("blockquote",[s("p",[t._v("显示转换一般指使用Number、String和Boolean三个构造函数，手动将各种类型的值，转换成数字、字符串或者布尔值。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1234")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234abcd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1234"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abcd"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "null"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h3",{attrs:{id:"几道小题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几道小题"}},[t._v("#")]),t._v(" 几道小题")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"[object Object]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n")])])]),s("h2",{attrs:{id:"对象的键支持什么类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的键支持什么类型"}},[t._v("#")]),t._v(" 对象的键支持什么类型")]),t._v(" "),s("p",[s("strong",[t._v("字符串或symbol")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
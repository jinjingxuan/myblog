(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{501:function(t,s,a){t.exports=a.p+"assets/img/chrome.33660818.png"},502:function(t,s,a){t.exports=a.p+"assets/img/error.21bb7f69.png"},503:function(t,s,a){t.exports=a.p+"assets/img/launch.1b2bbd1b.png"},504:function(t,s,a){t.exports=a.p+"assets/img/debug.9736f529.png"},505:function(t,s,a){t.exports=a.p+"assets/img/button.643e3efe.png"},506:function(t,s,a){t.exports=a.p+"assets/img/console.808aed2a.png"},507:function(t,s,a){t.exports=a.p+"assets/img/logpoint.c127d955.png"},508:function(t,s,a){t.exports=a.p+"assets/img/stack.640c1388.png"},509:function(t,s,a){t.exports=a.p+"assets/img/variables.94e2bd20.png"},510:function(t,s,a){t.exports=a.p+"assets/img/devtool.c1cdf2bc.png"},511:function(t,s,a){t.exports=a.p+"assets/img/inspect.ced3cb8a.png"},512:function(t,s,a){t.exports=a.p+"assets/img/node.02442e53.png"},513:function(t,s,a){t.exports=a.p+"assets/img/condition.f5d2402a.png"},671:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"chrome-和-vscode-调试工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome-和-vscode-调试工具"}},[t._v("#")]),t._v(" chrome 和 vscode 调试工具")]),t._v(" "),s("p",[t._v("在开发过程中，我们最常用的是 "),s("code",[t._v("console.log")]),t._v(" 调试，但是这样会有很多问题，比如"),s("a",{attrs:{href:"https://juejin.cn/post/7035969663288737822",target:"_blank",rel:"noopener noreferrer"}},[t._v("console.log 打印出来的数据不一定准确"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("再比如调试 node 程序打印时，你会发现对象的值也是对象的时候不会展开，而是打印一个 "),s("code",[t._v("[Object] [Array]")]),t._v(" 这种字符串，更致命的是打印的太长会超过缓冲区的大小，终端里会显示不全，所以这时候就需要使用 chrome 调试工具和 vscode调试工具。")]),t._v(" "),s("h2",{attrs:{id:"chrome-调试-web-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome-调试-web-项目"}},[t._v("#")]),t._v(" chrome 调试 web 项目")]),t._v(" "),s("p",[t._v("在调试的时候，我们直接在想要调试的代码位置加上 "),s("code",[t._v("debugger")]),t._v(" 即可，此时运行项目即可在 chrome 控制台看到：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(501),alt:"chrome"}})]),t._v(" "),s("p",[t._v("其中红框内的调试按钮，从左到右含义分别为：")]),t._v(" "),s("ul",[s("li",[t._v("resume/pause script execution：恢复/暂停脚本执行。")]),t._v(" "),s("li",[t._v("step over next function call：跨过函数，不遇到函数时，执行下一步。遇到函数时，不进入函数。")]),t._v(" "),s("li",[t._v("step into next function call：进入函数，不遇到函数时，执行下一步。遇到函数时，进入函数执行上下文。")]),t._v(" "),s("li",[t._v("step out of current function：跳出当前函数。")]),t._v(" "),s("li",[t._v("step：执行下一步。")]),t._v(" "),s("li",[t._v("deactivate breakpoints：使所有断点暂时失效。")]),t._v(" "),s("li",[t._v("pause on exceptions：出现异常暂停。")])]),t._v(" "),s("p",[t._v("假如选择了 "),s("code",[t._v("pause on exceptions")]),t._v(" ，那么程序在遇到错误时也会暂停：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(502),alt:"error"}})]),t._v(" "),s("h2",{attrs:{id:"vscode-调试-web-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vscode-调试-web-项目"}},[t._v("#")]),t._v(" vscode 调试 web 项目")]),t._v(" "),s("p",[t._v("我们拿一个 vue 项目来操作，用 vscode 打开项目之后，切换到左侧的调试区域并点击创建 "),s("code",[t._v("launch.json")]),t._v(",然后选择 "),s("code",[t._v("Web App (Chrome)")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(503),alt:"launch"}})]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .vscode/launch.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurations"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chrome"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launch Chrome against localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8080"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 填项目本地运行地址")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webRoot"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("本地"),s("code",[t._v("npm run dev")]),t._v("运行项目之后，然后就可以在代码上打上断点，然后点击 "),s("code",[t._v("Launch")]),t._v(" 按钮（或者 F5）进行调试，点击后会自动启动一个 chrome 窗口打开项目，此时断点就已经生效了。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(504),alt:"debug"}})]),t._v(" "),s("p",[t._v("同样的，此时 vscode 中有和 chrome 类似的调试按钮，把 "),s("code",[t._v("Caught Exceptions")]),t._v(" 勾上，这样在代码报错的地方，就会自动中断执行。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(505),alt:"button"}})]),t._v(" "),s("p",[t._v("断点生效后，vscode 中会有一个调试控制台 "),s("code",[t._v("debug console")]),t._v("，在这里可以打印想要看到的变量，例如这里我打印了"),s("code",[t._v("this")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(506),alt:"console"}})]),t._v(" "),s("p",[t._v("如果想打印出某个变量，也可以使用 "),s("code",[t._v("log point")]),t._v(" 功能，右键选择"),s("code",[t._v("Add Logpint")]),t._v("，然后使用"),s("code",[t._v("{}")]),t._v("包裹想要打印的变量，这样也会在调试控制台输出。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(507),alt:"logpoint"}})]),t._v(" "),s("blockquote",[s("p",[t._v("这种方式的优点是没有污染代码，如果用 console.log 的话调试完之后这个 console 还需要删掉。")])]),t._v(" "),s("p",[t._v("左侧还可以查看调用栈"),s("code",[t._v("call stack")]),t._v("，例如这里执行路线为："),s("code",[t._v("created()")]),t._v(" => "),s("code",[t._v("test()")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(508),alt:"stack"}})]),t._v(" "),s("p",[t._v("而且点击每个调用栈，在 "),s("code",[t._v("variables")]),t._v(" 中还可以看到当前调用栈中的变量：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(509),alt:"variables"}})]),t._v(" "),s("h2",{attrs:{id:"chrome-调试-node-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome-调试-node-项目"}},[t._v("#")]),t._v(" chrome 调试 node 项目")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" greeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello nodejs debugger'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("终端中输入："),s("code",[t._v("node --inspect-brk index.js")]),t._v("，然后打开 "),s("RouterLink",{attrs:{to:"chrome://inspect/#devices"}},[t._v("chrome://inspect/#devices")])],1),t._v(" "),s("p",[s("img",{attrs:{src:a(510),alt:"devtool"}})]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("--inspect-brk")]),t._v(" 表示运行这个 js 文件的同时，在文件的第一行打上断点。")])]),t._v(" "),s("p",[t._v("点击 inspect 此时 chrome 会打开一个 nodejs 专用的调试窗口，并且代码在第一行中断了。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(511),alt:"inspect"}})]),t._v(" "),s("h2",{attrs:{id:"vscode-调试-node-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vscode-调试-node-项目"}},[t._v("#")]),t._v(" vscode 调试 node 项目")]),t._v(" "),s("p",[t._v("同样地，和 vscode 调试 web 项目一样，在项目中创建 "),s("code",[t._v("launch.json")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use IntelliSense to learn about possible attributes.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hover to view descriptions of existing attributes.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurations"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launch Program"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"skipFiles"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<node_internals>/**"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/index.js"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后就可以在 vscode 中进行调试了，和上面介绍过的没有差别：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(512),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"条件断点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件断点"}},[t._v("#")]),t._v(" 条件断点")]),t._v(" "),s("p",[t._v("在某些情况下，我们不希望打上的每个断点都发挥作用，而是在执行到断点那行，且满足某个条件再中断代码执行。这就是条件断点。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("比如上面的代码，假设我们在第二行 "),s("code",[t._v("console.log")]),t._v(" 打了断点，那么这个断点总计会中断十次。这往往是我们不希望看到的，可能我们需要的仅仅是其中某一次循环而非所有。这时候可以右键点击并选择 "),s("code",[t._v("Add Conditional Breakpoint")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(513),alt:"condition"}})]),t._v(" "),s("p",[t._v("可以看到调试控制台前几次 i 均打印出来，直到 "),s("code",[t._v("i === 5")]),t._v(" 时才中断执行。")])])}),[],!1,null,null,null);s.default=n.exports}}]);
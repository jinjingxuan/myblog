(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{567:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"跨域相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域相关"}},[t._v("#")]),t._v(" 跨域相关")]),t._v(" "),s("p",[t._v("本文不是八股文知识点，不会介绍 jsonp、iframe 等跨域方式，只介绍在开发中最常见的几种跨域方式。")]),t._v(" "),s("h2",{attrs:{id:"access-control-allow-origin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-origin"}},[t._v("#")]),t._v(" Access-Control-Allow-Origin")]),t._v(" "),s("p",[t._v("最简单的方式：服务端配置 "),s("code",[t._v("Access-Control-Allow-Origin: *")]),t._v("，借此复习一下几种响应头。")]),t._v(" "),s("p",[s("strong",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("预检请求 (opens new window)"),s("OutboundLink")],1),t._v("相关响应头")])]),t._v(" "),s("ul",[s("li",[t._v("Access-Control-Allow-Origin：响应头指定了该响应的资源是否被允许与给定的"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Origin",target:"_blank",rel:"noopener noreferrer"}},[t._v("origin (opens new window)"),s("OutboundLink")],1),t._v("共享。")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Methods: 响应首部 "),s("strong",[s("code",[t._v("Access-Control-Allow-Methods")])]),t._v(" 在对 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Preflight_request",target:"_blank",rel:"noopener noreferrer"}},[t._v("preflight request (opens new window)"),s("OutboundLink")],1),t._v(".（预检请求）的应答中明确了客户端所要访问的资源允许使用的方法或方法列表。")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Headers: 响应首部 "),s("strong",[s("code",[t._v("Access-Control-Allow-Headers")])]),t._v(" 用于 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Preflight_request",target:"_blank",rel:"noopener noreferrer"}},[t._v("preflight request (opens new window)"),s("OutboundLink")],1),t._v("（预检请求）中，列出了将会在正式请求的 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Access-Control-Request-Headers")]),t._v(" (opens new window)"),s("OutboundLink")],1),t._v("字段中出现的首部信息。")]),t._v(" "),s("li",[t._v("Access-Control-Allow-Credentials: 当请求要求携带证书信息（例如cookie,授权信息等）验证，服务器端是否允许携带")]),t._v(" "),s("li",[t._v("Access-Control-Max-Age: 本次预检请求的有效期，单位为秒")])]),t._v(" "),s("h2",{attrs:{id:"proxy-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy-代理"}},[t._v("#")]),t._v(" proxy 代理")]),t._v(" "),s("p",[t._v("由于 webpack-dev-server 是一个本地开发服务器，所以我们的应用在开发阶段是独立运行在 localhost 的一个端口上，而后端服务又是运行在另外一个地址上。但是最终上线过后，我们的应用一般又会和后端服务部署到同源地址下。")]),t._v(" "),s("p",[t._v("那这样就会出现一个非常常见的问题：在实际生产环境中能够直接访问的 API，回到我们的开发环境后，再次访问这些 API 就会产生跨域请求问题。")]),t._v(" "),s("p",[t._v("可能有人会说，我们可以用跨域资源共享（CORS）解决这个问题。确实如此，如果我们请求的后端 API 支持 CORS，那这个问题就不成立了。但是并不是每种情况下服务端的 API 都支持 CORS。如果前后端应用是同源部署，也就是协议 / 域名 / 端口一致，那这种情况下，根本没必要开启 CORS，所以跨域请求的问题仍然是不可避免的。")]),t._v(" "),s("p",[t._v("那解决这种开发阶段跨域请求问题最好的办法，就是在开发服务器中配置一个后端 API 的代理服务，也就是把后端接口服务代理到本地的开发服务地址。")]),t._v(" "),s("p",[t._v("webpack-dev-server 就支持直接通过配置的方式，添加代理服务。接下来，我们来看一下它的具体用法。")]),t._v(" "),s("p",[t._v("比如我们假定 GitHub 的 API 就是我们应用的后端服务，那我们的目标就是将 GitHub API 代理到本地开发服务器中，我们可以先在浏览器中尝试访问其中的一个接口： "),s("a",{attrs:{href:"https://api.github.com/users/mojombo/followers",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://api.github.com/users"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("devServer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("contentBase")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./public'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://localhost:8080/api/users -> https://api.github.com/api/users")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://api.github.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://localhost:8080/api/users -> https://api.github.com/users")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathRewrite")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'^/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不能使用 localhost:8080 作为请求 GitHub 的主机名")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changeOrigin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200531181008355.png",alt:"1"}})]),t._v(" "),s("p",[t._v("那此时我们请求 http://localhost:8080/api/users ，就相当于请求了 https://api.github.com/users")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时再写跨域请求，就可正常访问")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虽然 GitHub 支持 CORS，但是不是每个服务端都应该支持。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fetch('https://api.github.com/users')")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际请求到http://localhost:8080/api/users")]),t._v("\n")])])]),s("h2",{attrs:{id:"allow-cors-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allow-cors-插件"}},[t._v("#")]),t._v(" Allow CORS 插件")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("chrome网上应用商店地址"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("开发时只需开启插件即可，原理也是添加响应头 Access-Control-Allow-Origin")]),t._v(" "),s("blockquote",[s("p",[t._v("Easily add (Access-Control-Allow-Origin: *) rule to the response header.")])]),t._v(" "),s("p",[t._v("但是注意这种方式不一定完全适用，且不用的时候注意关掉，因为访问正常网站的时候可能会报错。")]),t._v(" "),s("h2",{attrs:{id:"接口的形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口的形式"}},[t._v("#")]),t._v(" 接口的形式")]),t._v(" "),s("p",[t._v("项目中的接口一般分为两种写法，第一种是区分测试环境和线上环境：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("测试环境地址：api.github-test.com/api/users\n正式环境地址：api.github.com/api/users\n")])])]),s("p",[t._v("另一种是使用相对路径的方式，只写 "),s("code",[t._v("/api/users")]),t._v("，不用区分测试和线上环境，这种方式一般使用上述的 devserver 开发的，测试环境可以直接跑在开发机上，线上部署后由于相对路径请求起来也没问题。")]),t._v(" "),s("h2",{attrs:{id:"预检请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预检请求"}},[t._v("#")]),t._v(" 预检请求")]),t._v(" "),s("p",[s("strong",[t._v("只有跨域的时候才可能会发送预检请求，此时还需要判断请求是否为简单请求")])]),t._v(" "),s("p",[t._v("简单请求：同时满足以下两大条件，")]),t._v(" "),s("ul",[s("li",[t._v("条件1：使用下列方法之一：GET，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/HEAD",target:"_blank",rel:"noopener noreferrer"}},[t._v("HEAD"),s("OutboundLink")],1),t._v("，POST")]),t._v(" "),s("li",[t._v("条件2：Content-Type 的值仅限于下列三者之一：")]),t._v(" "),s("li",[t._v("text/plain")]),t._v(" "),s("li",[t._v("multipart/form-data")]),t._v(" "),s("li",[t._v("application/x-www-form-urlencoded")])]),t._v(" "),s("p",[t._v("除了以上条件之外，则会发起预检请求。")]),t._v(" "),s("h2",{attrs:{id:"预检请求与重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预检请求与重定向"}},[t._v("#")]),t._v(" 预检请求与重定向")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("并不是所有浏览器都支持预检请求的重定向。如果一个预检请求发生了重定向，一部分浏览器将报告错误（chrome 有问题，safari 没问题）：")]),t._v(" "),s("blockquote",[s("p",[t._v("Access to XMLHttpRequest at 'http://xxx' (redirected from 'http://yyy') from origin 'http://zzz' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: Redirect is not allowed for a preflight request.")])]),t._v(" "),s("p",[t._v("CORS 最初要求浏览器具有该行为，不过在后续的"),s("a",{attrs:{href:"https://github.com/whatwg/fetch/commit/0d9a4db8bc02251cc9e391543bb3c1322fb882f2",target:"_blank",rel:"noopener noreferrer"}},[t._v("修订"),s("OutboundLink")],1),t._v("中废弃了这一要求。但并非所有浏览器都实现了这一变更，而仍然表现出最初要求的行为。")]),t._v(" "),s("p",[t._v("在浏览器的实现跟上规范之前，有两种方式规避上述报错行为：")]),t._v(" "),s("ul",[s("li",[t._v("在服务端去掉对预检请求的重定向；")]),t._v(" "),s("li",[t._v("将实际请求变成一个"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS#%E7%AE%80%E5%8D%95%E8%AF%B7%E6%B1%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单请求"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("blockquote",[s("p",[t._v("情景1：用户登录页面 http://aaa.com 后，请求 http://aaa.com/getuser 接口，后端判断未登录，于是 302 重定向到单点登录网站 http://login.com，但是此时却报错：")]),t._v(" "),s("p",[t._v("Access to XMLHttpRequest at 'http://login.com' (redirected from 'http://aaa.com/getuser') from origin 'http://aaa.com' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.")]),t._v(" "),s("p",[t._v("问题：http://aaa.com/getuser 接口的请求头中加了 Content-Type：application/json，使得发送了预检请求，然后在 chrome 中预检请求直接重定向有问题从而报错，把 application/json 删掉即可。")])]),t._v(" "),s("h2",{attrs:{id:"常见跨域错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见跨域错误"}},[t._v("#")]),t._v(" 常见跨域错误")]),t._v(" "),s("blockquote",[s("p",[t._v("Access to XMLHttpRequest at 'xxxx' from origin 'yyyy' has been blocked by CORS policy: Request header field zzz is not allowed by Access-Control-Allow-Headers in preflight response.")])]),t._v(" "),s("p",[t._v("这种问题的是因为后端配置的 access-control-allow-header 里面不允许 zzz，要么后端配置下，要么删一下请求头。表现形式一般是 options 请求可以请求成功，但是正式请求会报跨域错误。")]),t._v(" "),s("h2",{attrs:{id:"axios-请求的三种错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios-请求的三种错误"}},[t._v("#")]),t._v(" axios 请求的三种错误")]),t._v(" "),s("ul",[s("li",[t._v("网络异常错误：当网络出现异常（比如网络不通）的时候，再比如上述所说的预检请求不允许重定向")]),t._v(" "),s("li",[t._v("超时错误")]),t._v(" "),s("li",[t._v("状态码错误：比如 http状态码为 500")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Network Error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'后端接口连接异常!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timeout'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'后端接口请求超时'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Request failed with status code'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'后端接口'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'异常'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        Message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);
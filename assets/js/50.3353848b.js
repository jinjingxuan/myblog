(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{432:function(t,a,s){t.exports=s.p+"assets/img/nginx.6085e82c.png"},433:function(t,a,s){t.exports=s.p+"assets/img/grep.e15f4f9b.png"},644:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),a("p",[t._v("本文参考自：https://juejin.cn/post/6844904129987526663")]),t._v(" "),a("blockquote",[a("p",[t._v("“Nginx 是一款轻量级的 HTTP 服务器，采用事件驱动的异步非阻塞处理方式框架，这让其具有极好的 IO 性能，时常用于服务端的"),a("strong",[t._v("反向代理")]),t._v("和"),a("strong",[t._v("负载均衡")]),t._v("。”")])]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("在 mac 上按照以下来安装：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\nnginx "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看版本")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("启动 Nginx："),a("code",[t._v("sudo nginx")])])]),t._v(" "),a("li",[a("p",[t._v("停止 Nginx："),a("code",[t._v("sudo nginx -s stop")])])]),t._v(" "),a("li",[a("p",[t._v("热重启 Nginx："),a("code",[t._v("sudo nginx -s reload")])])]),t._v(" "),a("li",[a("p",[t._v("强制停止 Nginx："),a("code",[t._v("sudo pkill -9 nginx")])])])]),t._v(" "),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("/usr/local/etc/nginx/nginx.conf")]),t._v(" （nginx配置文件路径）")]),t._v(" "),a("li",[a("code",[t._v("/usr/local/var/www")]),t._v(" （nginx服务器默认的根目录）")]),t._v(" "),a("li",[a("code",[t._v("/usr/local/Cellar/nginx/1.17.9")]),t._v(" （nginx的安装路径）")]),t._v(" "),a("li",[a("code",[t._v("/usr/local/var/log/nginx/error.log")]),t._v(" (nginx默认的日志路径)")])]),t._v(" "),a("p",[t._v("Nginx 默认配置文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {  \n        # 当nginx接到请求后，会匹配其配置中的service模块\n        # 匹配方法就是将请求携带的host和port去跟配置中的server_name和listen相匹配\n        listen       8080;        \n        server_name  localhost; # 定义当前虚拟主机（站点）匹配请求的主机名\n\n        location / {\n            root   html; # Nginx默认值\n            # 设定Nginx服务器返回的文档名\n            index  index.html index.htm; # 先找根目录下的index.html，如果没有再找index.htm\n        }\n}\n")])])]),a("p",[t._v("当访问 "),a("code",[t._v("localhost:8080")]),t._v(" 时，对应的即是 "),a("code",[t._v("/usr/local/var/www")]),t._v(" 路径下的 "),a("code",[t._v("index.html")]),t._v(" 文件，如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(432),alt:"nginx"}})]),t._v(" "),a("p",[t._v("可以在 vscode 中打开对应的 html 文件：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Welcome to nginx!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 35em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-family")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tahoma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Verdana"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Arial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sans-serif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Welcome to nginx!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("For online documentation and support please refer to\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://nginx.org/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nginx.org"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\nCommercial support is available at\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://nginx.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("nginx.com"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Thank you for using nginx."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("h2",{attrs:{id:"多个配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个配置文件"}},[t._v("#")]),t._v(" 多个配置文件")]),t._v(" "),a("p",[t._v("我们在使用nginx时，会遇到有多个服务要进行代理，如果我们直接在nginx.conf文件中添加，配置文件会显得")]),t._v(" "),a("p",[t._v("比较臃肿且不好维护。此时我们可以通过include的方式，为每个服务建立nginx的配置文件，这样也便于后期维护。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http {\n    # ...\n    include /etc/nginx/conf/*.conf;\n}\n")])])]),a("p",[a("code",[t._v("conf")]),t._v(" 目录下可以有 "),a("code",[t._v("a.conf")]),t._v(" 和 "),a("code",[t._v("b.conf")])]),t._v(" "),a("h2",{attrs:{id:"查看-nginx-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看-nginx-进程"}},[t._v("#")]),t._v(" 查看 nginx 进程")]),t._v(" "),a("p",[t._v("ps -ef | grep nginx")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ps -ef")]),t._v(" 表示显示所有进程的消息。")]),t._v(" "),a("li",[a("code",[t._v("|")]),t._v(" 是管道命令。通常需要借助管道命令”|”多个命令的组合")]),t._v(" "),a("li",[a("code",[t._v("grep")]),t._v(" 是"),a("code",[t._v("Linux")]),t._v(" 下的文本过滤工具")])]),t._v(" "),a("p",[t._v("输出为：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(433),alt:"grep"}})]),t._v(" "),a("blockquote",[a("p",[t._v("启动nginx以后，有两个nginx进程，一个master进程，一个worker进程，worker进程的父进程 ID 即是master进程，可以在输出的第2列和第3列验证。")])]),t._v(" "),a("p",[t._v("根据进程号重启nginx：kill -HUP 进程号（master 的进程号）")]),t._v(" "),a("h2",{attrs:{id:"nginx-主要应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-主要应用"}},[t._v("#")]),t._v(" Nginx 主要应用")]),t._v(" "),a("h3",{attrs:{id:"动静分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[t._v("#")]),t._v(" 动静分离")]),t._v(" "),a("p",[t._v("动静分离其实就是 Nginx 服务器将接收到的请求分为"),a("strong",[t._v("动态请求")]),t._v("和"),a("strong",[t._v("静态请求")]),t._v("。")]),t._v(" "),a("p",[t._v("动静分离的一种做法是将静态资源部署在nginx上，后台项目部署到应用服务器上，根据一定规则静态资源的请求全部请求 nginx 服务器，达到动静分离的目标。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {  \n        listen       8080;        \n        server_name  localhost;\n\n        location / {\n            root   html; # Nginx默认值\n            index  index.html index.htm;\n        }\n        \n        # 静态化配置，所有静态请求都转发给 nginx 处理\n        location ~ .*\\.(html|htm|gif|jpg|jpeg|bmp|png|ico|js|css)$ {\n            root /usr/local/var/www; # 静态请求所代理到的根目录\n        }\n        \n        # 动态请求匹配到 path 为 myblog 的就转发到 8081 端口处理\n        location /myblog/ {  \n            proxy_pass http://localhost:8081; # 充当服务代理\n        }\n}\n")])])]),a("ul",[a("li",[t._v("静：访问 "),a("code",[t._v("localhost:8080/index.html")]),t._v(" 会直接从代理的根目录中去取。")]),t._v(" "),a("li",[t._v("动：访问"),a("code",[t._v("localhost:8080/myblog/")]),t._v(" 请求会转发到 "),a("code",[t._v("http://localhost:8081")]),t._v(" 处理。")])]),t._v(" "),a("h4",{attrs:{id:"场景一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景一"}},[t._v("#")]),t._v(" 场景一")]),t._v(" "),a("p",[t._v("此时假如我本地启动了一个博客服务，地址为："),a("code",[t._v("http://localhost:8081")]),t._v("，经过以上配置那么当我请求 "),a("code",[t._v("localhost:8080/myblog/")]),t._v(" 就会转发到 "),a("code",[t._v("http://localhost:8081")]),t._v(" 上，也会打开博客页面。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://localhost:8088/myblog/ => http://localhost:8081\n")])])]),a("p",[t._v("正常情况下静态配置用于获取资源文件，动态配置用于转发接口请求给真正的服务。")]),t._v(" "),a("h4",{attrs:{id:"场景二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景二"}},[t._v("#")]),t._v(" 场景二")]),t._v(" "),a("p",[t._v("如果项目分别部署在同一台机器上时，由于无法使用相同的端口，故后端一般会将端口号设置成不同的值（例如8080、8081），但是当前端向后端请求资源时还要加上端口号，未免显得麻烦，故利用可以 nginx 将前端的指定路径代理到后端的8080、8081端口上。")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http: {\n  server {\n    server_name example.com\n\n    location /mail {\n    \tproxy_pass http:example.com:8080;\n    }\n\n    location /user {\n    \tproxy_pass http:example.com:8081;\n    }\n  }\n}\n")])])]),a("ul",[a("li",[t._v("将 "),a("code",[t._v("http://example.com/mail/")]),t._v(" 下的请求转发到 "),a("code",[t._v("http://example.com:8080/")])]),t._v(" "),a("li",[a("code",[t._v("http://example.com/mail/index.html")]),t._v(" -> "),a("code",[t._v("http://example.com:8080/index.html")])]),t._v(" "),a("li",[t._v("将 "),a("code",[t._v("http://example.com/user/")]),t._v(" 下的请求转发到 "),a("code",[t._v("http://example.com:8081/")])]),t._v(" "),a("li",[a("code",[t._v("http://example.com/user/index.html")]),t._v(" -> "),a("code",[t._v("http://example.com:8081/index.html")])])]),t._v(" "),a("h3",{attrs:{id:"反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),a("blockquote",[a("p",[t._v("这个功能也就是 nginx 的反向代理功能，即客户端不知道真正请求的服务端，我们可以用反向代理来解决跨域问题。")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("ul",[a("li",[t._v("前端server的域名为："),a("code",[t._v("fe.server.com")])]),t._v(" "),a("li",[t._v("后端服务的域名为："),a("code",[t._v("dev.server.com")])])]),t._v(" "),a("p",[t._v("现在我在"),a("code",[t._v("fe.server.com")]),t._v(" 对 "),a("code",[t._v("dev.server.com")]),t._v("发起请求一定会出现跨域。")]),t._v(" "),a("p",[t._v("现在我们只需要启动一个nginx服务器，将 "),a("code",[t._v("server_name")]),t._v(" 设置为 "),a("code",[t._v("fe.server.com")]),t._v(" ,然后设置相应的 location 以拦截前端需要跨域的请求，最后将请求代理回"),a("code",[t._v("dev.server.com")]),t._v("。如下面的配置：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {\n        listen       80;\n        server_name  fe.server.com;\n        location / {\n                proxy_pass dev.server.com;\n        }\n}\n")])])]),a("p",[t._v("这样可以完美绕过浏览器的同源策略："),a("code",[t._v("fe.server.com")]),t._v("访问"),a("code",[t._v("nginx")]),t._v("的"),a("code",[t._v("fe.server.com")]),t._v("属于同源访问，而"),a("code",[t._v("nginx")]),t._v("对服务端转发的请求不会触发浏览器的同源策略。")]),t._v(" "),a("h4",{attrs:{id:"场景一-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景一-2"}},[t._v("#")]),t._v(" 场景一")]),t._v(" "),a("p",[t._v("访问某一台机器的域名时，我希望返回我上传到 bos 上的 html 地址。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {  \n  listen       8088;        \n  server_name  xxx.com;\n\n  location / {\n  \tproxy_pass   http://bos/index.html;\n  }\n\n}\n")])])]),a("p",[t._v("此时访问的虽然是 "),a("code",[t._v("xxx.com")]),t._v("，但是实际请求的是 "),a("code",[t._v("http://bos/index.html")]),t._v("，对客户端隐藏了真实请求地址。")]),t._v(" "),a("h3",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),a("p",[t._v("随着业务的不断增长和用户的不断增多，一台服务已经满足不了系统要求了。这个时候就出现了服务器集群。")]),t._v(" "),a("p",[t._v("在服务器集群中，Nginx 可以将接收到的客户端请求“均匀地”（严格讲并不一定均匀，可以通过设置权重）分配到这个集群中所有的服务器上。这个就叫做"),a("strong",[t._v("负载均衡")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 负载均衡：设置domain")]),t._v("\nupstream domain "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server localhost:8000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server localhost:8001"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nserver "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        \n        server_name  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root   html; # Nginx默认值")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index  index.html index.htm;")]),t._v("\n            \n            proxy_pass http://domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 负载均衡配置，请求会被平均分配到8000和8001端口")]),t._v("\n            proxy_set_header Host "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("8000和8001是我本地起的两个页面，负载均衡成功后可以看到访问 "),a("code",[t._v("localhost:8080")]),t._v(" 有时会访问到8000端口的页面，有时会访问到8001端口的页面。")])])}),[],!1,null,null,null);a.default=e.exports}}]);